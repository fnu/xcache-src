;; 本文件只是例子, 请在 php.ini 里设置以便生效
[xcache-common]
;; 安装成 zend extension (推荐), 路径一般是 "$extension_dir/xcache.so"
zend_extension = /usr/local/lib/php/extensions/non-debug-non-zts-xxx/xcache.so
;; Windows 系统例子:
zend_extension_ts = c:/php/extensions/php_xcache.dll
;; 或者您也可把 XCache 安装成 extension, 注意确保您的 extension_dir 设置正确, 并把 xcache.so 或者 php_xcache.dll 放到该目录里面
; extension = xcache.so
;; 或者 Win32 系统:
; extension = php_xcache.dll

; 如果您在 php5.1 或者以上版本启用 XCache, 则必须使用以下设置
auto_globals_jit = Off

[xcache.admin]
xcache.admin.user = "mOo"
; xcache.admin.pass = md5($您的密码)
xcache.admin.pass = ""

[xcache]
; 这里的多数选项仅在 ini 里可以修改, 这里列出的都是默认值, 除非另外说明
; 禁用: xcache.size=0
; 启用: xcache.size=任意>0的值, 同时请注意您的系统 mmap 上限
xcache.size =                  0
; 建议设置为 cpu 数 (cat /proc/cpuinfo |grep -c processor)
xcache.count =                 1
; 只是个参考值, 您可以放心地存储多于此数量的项目(php脚本/变量)
xcache.slots =                8K
; 缓存项目的 ttl, 0=永久
xcache.ttl   =                 0
; 扫描过期项目的时间间隔, 0=不扫描, 其他值以秒为单位
xcache.gc_interval =           0

; 同上, 只是针对变量缓存设置
xcache.var_size  =             0
xcache.var_count =             1
xcache.var_slots =            8K
; 默认, 允许 ini_set()
xcache.var_ttl   =             0
; 最大ttl值
xcache.var_maxttl   =          0
xcache.var_gc_interval =     300

; 仅测试用
xcache.test =                Off
; /dev/zero 时无效
xcache.readonly_protection = Off
; 对于 *nix 系统, xcache.mmap_path 是文件路径而不是目录, (可以不存在 但是必须能创建).
; 如果您期望启用 ReadonlyProtection, 可以使用类似 "/tmp/xcache"
; 2 个 php 组不会共享同一个 /tmp/xcache
; 对于 Win32 系统, xcache.mmap_path=匿名MAP名字, 不是文件路径. 建议使用 XCache 字眼避免跟其他软件冲突
xcache.mmap_path =    "/dev/zero"


; 仅用于 *nix 系统
; 设置为空(禁用) 或者类似 "/tmp/phpcore/"
; 注意该目录应该能被 php 写入文件 (跟 open_basedir 无关)
xcache.coredump_directory =   ""

xcache.cacher =               On
xcache.optimizer =           Off

[xcache.coverager]
; 请确保本目录能被 coverage viewer 脚本读取 (注意 open_basedir)
xcache.coveragedump_directory = "/tmp/pcov/"

; 如果 xcache.coveragedump_directory 设置为空则本设置自动为 Off
xcache.coveragedumper         = Off
