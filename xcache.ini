[xcache-common]
;; install as zend extension (recommended), normally "$extension_dir/xcache.so"
zend_extension = /usr/local/lib/php/extensions/non-debug-non-zts-xxx/xcache.so
;; For windows users, replace xcache.so with php_xcache.dll
zend_extension_ts = c:/php/extensions/php_xcache.dll
;; or install as extension, make sure your extension_dir setting is correct
; extension = xcache.so
;; or win32:
; extension = php_xcache.dll

; required for >=php5.1 if you turn XCache on
auto_globals_jit = Off

[xcache.admin]
xcache.admin.user = "mOo"
; xcache.admin.pass = md5($your_password)
xcache.admin.pass = ""

[xcache]
; ini only settings, all the values here is default unless explained
; to disable: xcache.size=0
; to enable : xcache.size=any size > 0 and your system mmap allows
xcache.size =                  0
; uncomment and set to cpu count (cat /proc/cpuinfo |grep -c processor)
xcache.count =                 1
; just a hash hints, you can always store count(items) > slots
xcache.slots =                8K

; same as aboves but for variable cache
xcache.var_size =              0
xcache.var_count =             1
xcache.var_slots =            8K

xcache.test =                Off
; N/A for /dev/zero
xcache.readonly_protection = Off
; for win32, xcache.mmap_path=anonymous map name, not file path
; uncomment and change to "/tmp/xcache" for readonly protection
; 2 group of php won't share the same /tmp/xcache
xcache.mmap_path =    "/dev/zero"


; leave it blank(disabled) or "/tmp/phpcore/"
; make sure it's writable by php (without checking open_basedir)
xcache.coredump_directory =   ""

; per request settings
xcache.cacher =               On
xcache.optimizer =           Off

[xcache.coverager]
; ini only settings
; make sure it's readable (care open_basedir) coverage viewer script
xcache.coveragedump_directory = "/tmp/pcov/"

; per request settings, will be auto disabled if xcache.coveragedump_directory is not set
xcache.coveragedumper         = Off
